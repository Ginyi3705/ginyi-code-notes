import{_ as s,c as a,o as n,O as l}from"./chunks/framework.0d343703.js";const d=JSON.parse('{"title":"Docker容器技术","description":"","frontmatter":{},"headers":[],"relativePath":"backend/docker.md","lastUpdated":1682676353000}'),o={name:"backend/docker.md"},p=l(`<h1 id="docker容器技术" tabindex="-1">Docker容器技术 <a class="header-anchor" href="#docker容器技术" aria-label="Permalink to &quot;Docker容器技术&quot;">​</a></h1><h3 id="安装docker" tabindex="-1">安装docker <a class="header-anchor" href="#安装docker" aria-label="Permalink to &quot;安装docker&quot;">​</a></h3><p>建议使用<code>Linux</code>系统安装<code>docker</code>，以下为<code>CentOS</code></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 1、yum 包更新到最新 </span></span>
<span class="line"><span style="color:#FFCB6B;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 2、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的 </span></span>
<span class="line"><span style="color:#FFCB6B;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yum-utils</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">device-mapper-persistent-data</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lvm2</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 3、 设置yum源</span></span>
<span class="line"><span style="color:#FFCB6B;">yum-config-manager</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--add-repo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://download.docker.com/linux/centos/docker-ce.repo</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 4、 安装docker，出现输入的界面都按 y </span></span>
<span class="line"><span style="color:#FFCB6B;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker-ce</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 5、 查看docker版本，验证是否验证成功</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span></code></pre></div><h3 id="配置镜像加速器" tabindex="-1">配置镜像加速器 <a class="header-anchor" href="#配置镜像加速器" aria-label="Permalink to &quot;配置镜像加速器&quot;">​</a></h3><p>1、国外拉取镜像速度比较慢，可以更换国内阿里云镜像</p><p>操作：注册阿里云账号(可以不实名)，进入<code>控制台</code>，搜索<code>镜像服务</code>，找到<code>镜像加速器</code>，里面有专属自己的镜像加速器</p><p>2、直接使用现有的，支持<code>centos/ubuntu</code></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 1、创建文件夹</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/docker</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 2、配置镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tee</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/docker/daemon.json</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;-</span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">EOF</span><span style="color:#C3E88D;">&#39;</span></span>
<span class="line"><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#C3E88D;">  &quot;registry-mirrors&quot;: [&quot;https://rfo88l2p.mirror.aliyuncs.com&quot;]</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#89DDFF;">EOF</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 3</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">daemon-reload</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span></span></code></pre></div><h3 id="docker服务相关命令" tabindex="-1">docker服务相关命令 <a class="header-anchor" href="#docker服务相关命令" aria-label="Permalink to &quot;docker服务相关命令&quot;">​</a></h3><h4 id="启动-关闭docker" tabindex="-1">启动/关闭docker <a class="header-anchor" href="#启动-关闭docker" aria-label="Permalink to &quot;启动/关闭docker&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start/stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 重启的话可以使用 restart</span></span></code></pre></div><h4 id="设置开启自动启动docker服务" tabindex="-1">设置开启自动启动docker服务 <a class="header-anchor" href="#设置开启自动启动docker服务" aria-label="Permalink to &quot;设置开启自动启动docker服务&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span></span></code></pre></div><h4 id="查看docker的状态" tabindex="-1">查看docker的状态 <a class="header-anchor" href="#查看docker的状态" aria-label="Permalink to &quot;查看docker的状态&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span></span></code></pre></div><h3 id="docker镜像相关命令" tabindex="-1">docker镜像相关命令 <a class="header-anchor" href="#docker镜像相关命令" aria-label="Permalink to &quot;docker镜像相关命令&quot;">​</a></h3><h4 id="查看镜像" tabindex="-1">查看镜像 <a class="header-anchor" href="#查看镜像" aria-label="Permalink to &quot;查看镜像&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">images</span></span></code></pre></div><h4 id="搜索镜像" tabindex="-1">搜索镜像 <a class="header-anchor" href="#搜索镜像" aria-label="Permalink to &quot;搜索镜像&quot;">​</a></h4><p>例如搜索<code>mysql:5.7</code></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">search</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql:</span><span style="color:#F78C6C;">5.7</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># ：后面是版本号  不指定默认为最新</span></span></code></pre></div><h4 id="拉取镜像" tabindex="-1">拉取镜像 <a class="header-anchor" href="#拉取镜像" aria-label="Permalink to &quot;拉取镜像&quot;">​</a></h4><p>例如拉取<code>mysql:5.7</code></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql:</span><span style="color:#F78C6C;">5.7</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># ：后面是版本号  不指定默认为最新</span></span></code></pre></div><h4 id="删除镜像" tabindex="-1">删除镜像 <a class="header-anchor" href="#删除镜像" aria-label="Permalink to &quot;删除镜像&quot;">​</a></h4><p><code>rm</code>表示删除</p><p><code>i</code>表示镜像</p><p>例如删除mysql:5.7（id为c20987f18b13）</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rmi</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">镜像id</span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">或者</span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">mysql:5.7</span><span style="color:#89DDFF;">\`</span></span></code></pre></div><h3 id="docker容器相关命令" tabindex="-1">docker容器相关命令 <a class="header-anchor" href="#docker容器相关命令" aria-label="Permalink to &quot;docker容器相关命令&quot;">​</a></h3><h4 id="根据镜像创建容器" tabindex="-1">根据镜像创建容器 <a class="header-anchor" href="#根据镜像创建容器" aria-label="Permalink to &quot;根据镜像创建容器&quot;">​</a></h4><p>例如创建centos7的容器</p><p><code>docker run</code>表示创建容器</p><p><code>-i</code>表示让容器一直保持链接</p><p><code>-t</code>表示为容器分配个终端</p><p><code>-d</code>表示<code>exit</code>后容器依然保持在后台运行</p><p><code>--name</code>表示给容器取个别名</p><p><code>centos:7</code>指定镜像</p><p><code>/bin/bash </code> 表示打开shell脚本，可不写，默认就是/bin/bash</p><p><strong>注意</strong>：通过<code>-it</code>创建的容器，一<code>创建就进入容器</code>，一<code>exit就关闭容器</code></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=my_centos7</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">centos:</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span><span style="color:#A6ACCD;">    	 </span><span style="color:#676E95;font-style:italic;"># exit后容器会关闭</span></span></code></pre></div><p><strong>注意</strong>：通过<code>-id</code>创建好容器后，不会马上进入容器，<code>exit不会关闭容器</code></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=my_centos72</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">centos:</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;">    			</span><span style="color:#676E95;font-style:italic;"># exit后容器不会关闭</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my2_centos7</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash				</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 进入容器，同时分配个终端给容器</span></span></code></pre></div><p><img src="https://gitee.com/my-images/typora-imgs/raw/master/image-20211227115251822.png" alt="image-20211227115251822"></p><h4 id="查看容器状态" tabindex="-1">查看容器状态 <a class="header-anchor" href="#查看容器状态" aria-label="Permalink to &quot;查看容器状态&quot;">​</a></h4><p>ps查看正在运行的容器</p><p><code>-a</code>表示查看所有容器状态，不加只查看运行中的容器</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a</span></span></code></pre></div><h4 id="启动-停止容器" tabindex="-1">启动/停止容器 <a class="header-anchor" href="#启动-停止容器" aria-label="Permalink to &quot;启动/停止容器&quot;">​</a></h4><p>例如<code>启动/停止</code>my_centos_2</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start/stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my_centos_2</span></span></code></pre></div><h4 id="删除容器" tabindex="-1">删除容器 <a class="header-anchor" href="#删除容器" aria-label="Permalink to &quot;删除容器&quot;">​</a></h4><p>例如<code>删除</code>my_centos_2</p><p><strong>注意</strong>：运行中的容器无法删除，故删除前应先停止容器的运行</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my_centos_2</span></span></code></pre></div><h4 id="查看容器详细信息" tabindex="-1">查看容器详细信息 <a class="header-anchor" href="#查看容器详细信息" aria-label="Permalink to &quot;查看容器详细信息&quot;">​</a></h4><p>例如<code>my_centos</code>容器的详细信息</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">inspect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my_centos</span></span></code></pre></div><h3 id="数据卷" tabindex="-1">数据卷 <a class="header-anchor" href="#数据卷" aria-label="Permalink to &quot;数据卷&quot;">​</a></h3><p>数据卷可以用来做持久化，即容器删除，数据还在</p><h4 id="配置数据卷" tabindex="-1">配置数据卷 <a class="header-anchor" href="#配置数据卷" aria-label="Permalink to &quot;配置数据卷&quot;">​</a></h4><blockquote><p>1、一个数据卷可以挂载多个容器</p><p>2、多个容器也可以挂载同一个数据卷</p></blockquote><p>例如创建<code>centos7容器</code>，将宿主机的<code>/root/docker/data</code>目录挂<code>载到容器中</code>的<code>/root/data_contrainer</code></p><p><code>-v 宿主机目录：容器目录 </code>(<strong>注意</strong>：目录不存在会自动创建)</p><p><code>/bin/bash可以省略</code></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=my_cnetos7</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/root/docker/data:/root/data_contrainer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">centos:</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span></code></pre></div><h3 id="数据卷容器" tabindex="-1">数据卷容器 <a class="header-anchor" href="#数据卷容器" aria-label="Permalink to &quot;数据卷容器&quot;">​</a></h3><p>数据卷容器可以实现多个容器的数据进行交换，相当于多个容器绑定同一个数据卷</p><h4 id="创建数据卷容器" tabindex="-1">创建数据卷容器 <a class="header-anchor" href="#创建数据卷容器" aria-label="Permalink to &quot;创建数据卷容器&quot;">​</a></h4><p>1、创建启动my_data_contrainer数据卷容器，使用-v参数设置数据卷</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=my_data_contrainer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/volume</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">centos:</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span></code></pre></div><p>2、创建启动my_centos7_1、my_centos7_2容器，使用--volume-from参数设置数据卷</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=my_centos7_1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--volumes-from</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my_data_contrainer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">centos:</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=my_centos7_2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--volumes-from</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my_data_contrainer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">centos:</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span></code></pre></div><h3 id="docker应用部署" tabindex="-1">docker应用部署 <a class="header-anchor" href="#docker应用部署" aria-label="Permalink to &quot;docker应用部署&quot;">​</a></h3><h4 id="部署mysql" tabindex="-1">部署MySQL <a class="header-anchor" href="#部署mysql" aria-label="Permalink to &quot;部署MySQL&quot;">​</a></h4><ol><li>搜索mysql镜像</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">search</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span></span></code></pre></div><ol start="2"><li>拉取mysql镜像</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql:</span><span style="color:#F78C6C;">5.7</span></span></code></pre></div><ol start="3"><li>创建容器，设置端口映射、目录映射</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在/root/docker目录下创建mysql目录用于存储mysql数据信息</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/docker/mysql</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/docker/mysql</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-id</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">3306</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">3306</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--name=u_mysql_8.0 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/conf:/etc/mysql/conf.d</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/logs:/logs</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/data:/var/lib/mysql</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e </span><span style="color:#C3E88D;">MYSQL_ROOT_PASSWORD=</span><span style="color:#F78C6C;">123456</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">mysql:8.0</span></span></code></pre></div><ul><li>参数说明： <ul><li><strong>-p 3307:3306</strong>：将容器的 3306 端口映射到宿主机的 3307 端口。</li><li><strong>-v $PWD/conf:/etc/mysql/conf.d</strong>：将主机当前目录下的 conf/my.cnf 挂载到容器的 /etc/mysql/my.cnf。配置目录</li><li><strong>-v $PWD/logs:/logs</strong>：将主机当前目录下的 logs 目录挂载到容器的 /logs。日志目录</li><li><strong>-v $PWD/data:/var/lib/mysql</strong> ：将主机当前目录下的data目录挂载到容器的 /var/lib/mysql 。数据目录</li><li>**-e MYSQL_ROOT_PASSWORD=123456：**初始化 root 用户的密码。</li></ul></li></ul><ol start="4"><li>进入容器，操作mysql</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">–it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">c_mysql</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span></code></pre></div><ol start="5"><li>使用外部机器连接容器中的mysql</li></ol><h4 id="部署tomcat" tabindex="-1">部署Tomcat <a class="header-anchor" href="#部署tomcat" aria-label="Permalink to &quot;部署Tomcat&quot;">​</a></h4><ol><li>搜索tomcat镜像</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">search</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tomcat</span></span></code></pre></div><ol start="2"><li>拉取tomcat镜像</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tomcat</span></span></code></pre></div><ol start="3"><li>创建容器，设置端口映射、目录映射</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在/root/docker目录下创建tomcat目录用于存储tomcat数据信息</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/docker/tomcat</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/docker/tomcat</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=c_tomcat</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">8080</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">:/usr/local/tomcat/webapps</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">tomcat</span></span></code></pre></div><ul><li><p>参数说明：</p><ul><li><p>**-p 8080:8080：**将容器的8080端口映射到主机的8080端口</p><p>**-v $PWD:/usr/local/tomcat/webapps：**将主机中当前目录挂载到容器的webapps</p></li></ul></li></ul><ol start="4"><li><p>使用外部机器访问tomcat</p><p>**注意：**此时访问<code>ip:8080</code>会显示404</p><p>可以创建个测试项目，操作如下</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tomcat</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span></span>
<span class="line"><span style="color:#FFCB6B;">vim</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.html</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">1&gt;</span><span style="color:#A6ACCD;">hello tomcat docker</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">/h</span><span style="color:#89DDFF;">1&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 保存退出</span></span></code></pre></div><p>打开浏览器：<code>ip:8080/test/index.html</code>即可访问</p></li></ol><h4 id="部署nginx" tabindex="-1">部署Nginx <a class="header-anchor" href="#部署nginx" aria-label="Permalink to &quot;部署Nginx&quot;">​</a></h4><ol><li>搜索nginx镜像</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">search</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre></div><ol start="2"><li>拉取nginx镜像</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre></div><ol start="3"><li>创建容器，设置端口映射、目录映射</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在/root/docker目录下创建nginx目录用于存储nginx数据信息</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/nginx</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">conf	#</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">提前准备好conf目录</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">conf</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 在~/nginx/conf/下创建nginx.conf文件,粘贴下面内容</span></span>
<span class="line"><span style="color:#FFCB6B;">vim</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx.conf</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">user</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">nginx</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">worker_processes</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">error_log</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">/var/log/nginx/error.log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">warn</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">pid</span><span style="color:#A6ACCD;">        </span><span style="color:#C3E88D;">/var/run/nginx.pid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">events</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">worker_connections</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">http</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">include</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">/etc/nginx/mime.types</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">default_type</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">application/octet-stream</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">log_format</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">main</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$remote_addr - $remote_user [$time_local] &quot;$request&quot; </span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#FFCB6B;">&#39;</span><span style="color:#A6ACCD;">$status $body_bytes_sent </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$http_referer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C3E88D;">                      </span><span style="color:#89DDFF;">&#39;&quot;</span><span style="color:#A6ACCD;">$http_user_agent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$http_x_forwarded_for</span><span style="color:#89DDFF;">&quot;&#39;</span><span style="color:#C3E88D;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    access_log  /var/log/nginx/access.log  main;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    sendfile        on;</span></span>
<span class="line"><span style="color:#C3E88D;">    #tcp_nopush     on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    keepalive_timeout  65;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    #gzip  on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    include /etc/nginx/conf.d/*.conf;</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=c_nginx_test</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">8099</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/conf/nginx.conf:/etc/nginx/nginx.conf</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/logs:/var/log/nginx</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/html:/usr/share/nginx/html</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=u_nginx_college_office_admin</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">8899</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/conf/nginx.conf:/etc/nginx/nginx.conf</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/logs:/var/log/nginx</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/html:/usr/share/nginx/html</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">nginx:latest</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=u_nginx_office</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">6080</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/conf/nginx.conf:/etc/nginx/nginx.conf</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/logs:/var/log/nginx</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/html:/usr/share/nginx/html</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">nginx:latest</span></span></code></pre></div><ul><li>参数说明： <ul><li><strong>-p 80:80</strong>：将容器的 80端口映射到宿主机的 80 端口。</li><li><strong>-v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf</strong>：将主机当前目录下的 /conf/nginx.conf 挂载到容器的 :/etc/nginx/nginx.conf。配置目录</li><li><strong>-v $PWD/logs:/var/log/nginx</strong>：将主机当前目录下的 logs 目录挂载到容器的/var/log/nginx。日志目录</li></ul></li></ul><ol start="4"><li><p>使用外部机器访问nginx</p><p>**注意：**此时访问<code>ip:80</code>会显示403</p><p>可以创建个测试项目，操作如下</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">html</span></span>
<span class="line"><span style="color:#FFCB6B;">vim</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.html</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">1&gt;</span><span style="color:#A6ACCD;">hello nginx docker</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">/h</span><span style="color:#89DDFF;">1&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 保存退出</span></span></code></pre></div><p>打开浏览器：<code>ip:80</code>即可访问</p></li></ol><h4 id="部署redis" tabindex="-1">部署Redis <a class="header-anchor" href="#部署redis" aria-label="Permalink to &quot;部署Redis&quot;">​</a></h4><p>1、搜索redis镜像</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">search</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">redis</span></span></code></pre></div><p>2、拉取redis镜像</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">redis:5.0.8</span></span></code></pre></div><p>3、创建容器，设置端口映射、目录映射</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在/root/docker目录下创建tomcat目录用于存储tomcat数据信息</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/docker/redis</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/docker/redis</span></span></code></pre></div><p>4、使用外部机器连接redis</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=u_redis</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">6379</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">6379</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">redis:5.0.8</span></span></code></pre></div><p>5、外部访问redis</p><h4 id="部署mongodb" tabindex="-1">部署MongoDB <a class="header-anchor" href="#部署mongodb" aria-label="Permalink to &quot;部署MongoDB&quot;">​</a></h4><p>1、搜索redis镜像</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">search</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mongo</span></span></code></pre></div><p>2、拉取redis镜像</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mongo</span></span></code></pre></div><p>3、创建容器，设置端口映射、目录映射</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在/root/docker目录下创建tomcat目录用于存储tomcat数据信息</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/docker/mongodb</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/docker/mongodb</span></span></code></pre></div><p>4、使用外部机器连接MongoDB</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=u_mongodb</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v $PWD</span><span style="color:#C3E88D;">/data:/data/db</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">27017</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">27017</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mongo:latest</span></span></code></pre></div><p>5、外部访问MongoDB</p><h4 id="将部署应用设置docker开启时自启" tabindex="-1">将部署应用设置docker开启时自启 <a class="header-anchor" href="#将部署应用设置docker开启时自启" aria-label="Permalink to &quot;将部署应用设置docker开启时自启&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--restart=always</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">容器名称</span><span style="color:#89DDFF;">]</span></span></code></pre></div><h4 id="容器重命名" tabindex="-1">容器重命名 <a class="header-anchor" href="#容器重命名" aria-label="Permalink to &quot;容器重命名&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rename</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">oldname</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">newname</span><span style="color:#89DDFF;">]</span></span></code></pre></div><h3 id="docker查看容器运行日志" tabindex="-1">docker查看容器运行日志 <a class="header-anchor" href="#docker查看容器运行日志" aria-label="Permalink to &quot;docker查看容器运行日志&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">logs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器id或者容器名称</span></span></code></pre></div><h3 id="docker镜像制作" tabindex="-1">docker镜像制作 <a class="header-anchor" href="#docker镜像制作" aria-label="Permalink to &quot;docker镜像制作&quot;">​</a></h3><h4 id="_1、容器转镜像" tabindex="-1">1、容器转镜像 <a class="header-anchor" href="#_1、容器转镜像" aria-label="Permalink to &quot;1、容器转镜像&quot;">​</a></h4><p>**注意：**挂载的文件在转为镜像时，不会被写入。但是除了挂载的文件外，其余文件可以被写入。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">镜像名称：版本号</span><span style="color:#A6ACCD;">    			</span><span style="color:#676E95;font-style:italic;"># 制作镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">save</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">压缩文件名称</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">镜像名称：版本号		</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 压缩一下镜像文件名称</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">load</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">压缩文件名称					</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 解压压缩后的镜像</span></span></code></pre></div><h4 id="_2、镜像制作" tabindex="-1">2、镜像制作 <a class="header-anchor" href="#_2、镜像制作" aria-label="Permalink to &quot;2、镜像制作&quot;">​</a></h4><p>制作镜像的指令大全</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">FROM</span><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 基础镜像，一切从这里开始</span></span>
<span class="line"><span style="color:#FFCB6B;">MAINTAINER</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;"># 镜像是谁写的，姓名+邮箱</span></span>
<span class="line"><span style="color:#FFCB6B;">RUN</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;"># 镜像构建的时候需要执行的命令</span></span>
<span class="line"><span style="color:#FFCB6B;">ADD</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;"># 添加内容，</span></span>
<span class="line"><span style="color:#FFCB6B;">WORKDIR</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># 镜像的工作目录</span></span>
<span class="line"><span style="color:#FFCB6B;">VOLUME</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;"># 卷挂载的目录</span></span>
<span class="line"><span style="color:#FFCB6B;">EXPOSE</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;"># 暴漏端口配置，与docker run -p 宿主机端口:容器内端口 效果一样</span></span>
<span class="line"><span style="color:#FFCB6B;">CMD</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;"># 指定这个容器启动的时候要运行的命令，只有最后一个会生效</span></span>
<span class="line"><span style="color:#FFCB6B;">ENTRYPOINT</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;"># 指令这个容器启动的时候执行的命令</span></span>
<span class="line"><span style="color:#FFCB6B;">ONBUILD</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># 当构建一个被继承的DockerFile时，会运行ONBUILD的指令，触发指令</span></span>
<span class="line"><span style="color:#FFCB6B;">COPY</span><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 类似于ADD，将我们文件拷贝到镜像中</span></span>
<span class="line"><span style="color:#FFCB6B;">ENV</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;"># 构建的时候设置环境变量</span></span></code></pre></div><h4 id="_3、镜像构建" tabindex="-1">3、镜像构建 <a class="header-anchor" href="#_3、镜像构建" aria-label="Permalink to &quot;3、镜像构建&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Dockerfile文件名</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">目标镜像名</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span></code></pre></div><blockquote><p>-f 是指哪个镜像文件</p><p>-t 是指要生成的目标镜像</p><p><strong>注意</strong>：不要漏了最后的<code>.</code> 如果<code>dockerfile文件名</code>是Dockerfile则可以省略 <code>-f Dockerfile文件名</code></p></blockquote><h5 id="构建springboot镜像文件" tabindex="-1">构建Springboot镜像文件 <a class="header-anchor" href="#构建springboot镜像文件" aria-label="Permalink to &quot;构建Springboot镜像文件&quot;">​</a></h5><blockquote><p>步骤：</p><ol><li>基于java8的环境</li><li>拷贝jar包到根目录下，命名为app.jar</li><li>服务端口</li><li>对外暴露的端口</li><li>执行jar包的命令</li></ol></blockquote><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">FROM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">java:</span><span style="color:#F78C6C;">8</span></span>
<span class="line"><span style="color:#FFCB6B;">COPY</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">*</span><span style="color:#C3E88D;">.jar</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/app.jar</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># CMD [&quot;--server.port=8080&quot;] 尽量不加指定端口吧，主机会访问不到</span></span>
<span class="line"><span style="color:#FFCB6B;">EXPOSE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 对外暴露默认的服务端口 具体查看yml文件</span></span>
<span class="line"><span style="color:#FFCB6B;">ENTRYPOINT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">java</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-jar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/app.jar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span></code></pre></div><p>根据Dockerfile镜像文件创建镜像</p><p><strong>注意</strong>：把<code>jar包</code>跟<code>Dockerfile文件</code>拷贝到<code>Linux</code>下，并在其所在的路径下，输入命令创建容器</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">SpringbootImage01:</span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span></code></pre></div><p>根据已生成的镜像创建容器</p><p>如需映射成其他端口，可以加上<code>-p</code>参数，如：<code>-p 8888:8080</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=SpringbootApp01</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">SpringbootImage01:</span><span style="color:#F78C6C;">1.0</span></span></code></pre></div><p>**注意：**连接服务的ip要使用服务器的ip，不能是127.0.0.1，否则会找不到服务地址。</p><h5 id="构建vue项目镜像" tabindex="-1">构建Vue项目镜像 <a class="header-anchor" href="#构建vue项目镜像" aria-label="Permalink to &quot;构建Vue项目镜像&quot;">​</a></h5><p>首先将vue项目build一下，打包出来</p><blockquote><p>步骤：</p><ol><li>设置基础镜像，利用nginx来做反向代理</li><li>拷贝dist中文件到指定目录下</li><li>新建nginx配置来覆盖nginx镜像中的配置</li></ol></blockquote><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">FROM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx:latest</span></span>
<span class="line"><span style="color:#FFCB6B;">COPY</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dist/</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">/usr/share/nginx/html/</span></span>
<span class="line"><span style="color:#FFCB6B;">COPY</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">default.conf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/conf.d/default.conf</span></span></code></pre></div><p>新建nginx默认配置文件，<code>default.conf</code></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">server_name</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">#charset koi8-r;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">access_log</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">/var/log/nginx/host.access.log</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">error_log</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">/var/log/nginx/error.log</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># root 根目录，默认nginx镜像的html文件夹，可以指定其他</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">root</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">/usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">index</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">index.html</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 如果vue-router使用的是history模式，需要设置这个 </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">try_files</span><span style="color:#A6ACCD;"> $uri $uri</span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">#error_page  404              /404.html;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># redirect server error pages to the static page /50x.html</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">error_page</span><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">502</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">503</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">504</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">/50x.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/50x.html</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">root</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">/usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>根据Dockerfile镜像文件创建镜像</p><p><strong>注意</strong>：把<code>dist</code>、<code>default.conf</code>跟<code>Dockerfile文件</code>拷贝到<code>Linux</code>下，并在其所在的路径下，输入命令创建容器</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">VueImage01:</span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span></code></pre></div><p>根据已生成的镜像创建容器</p><p>如需映射成其他端口，可以加上<code>-p</code>参数，如：<code>-p 9999:80</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name=VueApp01</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">VueImage01:</span><span style="color:#F78C6C;">1.0</span></span></code></pre></div>`,166),e=[p];function t(c,r,C,y,i,D){return n(),a("div",null,e)}const h=s(o,[["render",t]]);export{d as __pageData,h as default};
